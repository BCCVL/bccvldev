# TODO: this template only works in qriscloud ... hardcoded network name
description: BCCVL Dev Env
heat_template_version: '2017-09-01'
outputs:
  instance_ip:
    description: The IP address of the deployed instance
    value: {get_attr: [bccvldev_instance, first_address]}
  accessIPv4:
    description: accessIPv4
    value: {get_attr: [bccvldev_instance, addresses, 'qld', 0, 'addr']}
  passwd:
    description: Password to log in
    value: {get_attr: [bccvldev_pw, value]}
parameter_groups:
  - label: Required
    description: required parameters
    parameters:
      - name
      - bccvlhub_user
      - bccvlhub_pass
  - label: Defaults
    description: parameters with default values
    parameters:
      - cloud9_user
      - key_name
      - image_id
      - instance_type
parameters:
  name:
    description: 'Instance Name, should be a dns compatible name to support urls like (<name>.nectar.bccvl.org.au)'
    label: Instance Name
    type: string
  image_id:
    description: Image to be used for compute instance
    label: Image ID
    type: string
    default: 5f9cd393-8fe1-45dc-b6c6-c1b93df2476d
    constraints:
      - custom_constraint: glance.image
  instance_type:
    description: Type of instance (flavor) to be used
    label: Instance Type
    type: string
    default: 885227de-b7ee-42af-a209-2f1ff59bc330
    # if we use custom constraints, we can't use flavor label as default
    # default: m2.medium
    constraints:
      - custom_constraint: nova.flavor
  key_name:
    description: Name of key-pair to be used for compute instance
    label: Key Name
    type: string
    default: BCCVL
    constraints:
      - custom_constraint: nova.keypair
  cloud9_user:
    description: user name used to log in to cloud9
    label: cloud9 user name
    type: string
    default: admin
  bccvlhub_user:
    description: user to log in to bccvl docker registry
    label: bccvl hub user
    type: string
  bccvlhub_pass:
    description: password to log in to bccvl docker registry
    label: bccvl hub password
    type: string
resources:
  bccvldev_instance:
    properties:
      availability_zone: QRIScloud
      flavor: {get_param: instance_type}
      image: {get_param: image_id}
      key_name: {get_param: key_name}
      name: {get_param: name}
      security_groups:
        - {get_resource: dev_secgroup}
      user_data: {get_resource: boot_script}
      user_data_format: SOFTWARE_CONFIG
    type: OS::Nova::Server
  bccvldev_pw:
    properties:
      character_classes: [{"min": 1, "class": "lettersdigits"}]
      length: 12
    type: OS::Heat::RandomString
  boot_script:
    properties:
      config:
        str_replace:
          params:
            __cloud9_pass__: {get_attr: [bccvldev_pw, value]}
            __cloud9_user__: {get_param: cloud9_user}
            __dns__: {list_join: ['.', [{get_param: name}, 'nectar.bccvl.org.au']]}
            __bccvlhub_user__: {get_param: bccvlhub_user}
            __bccvlhub_pass__: {get_param: bccvlhub_pass}
          template: |
            #!/bin/sh

            echo "Running boot script"

            # install required packages

            yum -y update

            yum install -y yum-utils device-mapper-persistent-data lvm2 git

            # install docker
            yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

            yum install -y docker-ce

            systemctl enable docker.service
            # stop in case it is already running
            systemctl stop docker.service
            # restart
            systemctl start docker.service

            # allow ec2-user access to docker

            usermod -a -G docker ec2-user

            # install docker-compose

            curl -L "https://github.com/docker/compose/releases/download/1.18.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

            chmod +x /usr/local/bin/docker-compose

            # TODO: I could probably move the bccvldev setup out of here, and just setup
            #       cloup9. put config values into /home/ec2-user/.local/c9/env?
            #       and certs as well /home/ec2-user/.local/c9/c9.pem (dev env and cloud9 will have different certs)
            #       let's encrypt could be nice here?
            # setup bccvl hub
            docker login -u __bccvlhub_user__ -p __bccvlhub_pass__ hub.bccvl.org.au
            sudo -i -u ec2-user -- docker login -u __bccvlhub_user__ -p __bccvlhub_pass__ hub.bccvl.org.au

            # setup bccvldev env
            sudo -i -u ec2-user -- git clone https://github.com/BCCVL/bccvldev

            echo "C9_WORKSPACE=/home/ec2-user/bccvldev" > /home/ec2-user/bccvldev/.env
            echo "C9_USER=__cloud9_user__" >> /home/ec2-user/bccvldev/.env
            echo "C9_PASS=__cloud9_pass__" >> /home/ec2-user/bccvldev/.env
            echo "BCCVL_HOSTNAME=__dns__" >> /home/ec2-user/bccvldev/.env

            echo "COMPOSE_FILE=docker-compose.yml" >> /home/ec2-user/bccvldev/.env
            echo "COMPOSE_PROJECT_NAME=bccvldev" >> /home/ec2-user/bccvldev/.env

            chown ec2-user:ec2-user /home/ec2-user/bccvldev/.env
            chmod 600 /home/ec2-user/bccvldev/.env

            sudo -i -u ec2-user -- bash -c "cd bccvldev; ./bin/gen_config.sh"

            # install c9 ide into /opt/c9sdk
            curl --silent --location https://rpm.nodesource.com/setup_9.x | bash -
            yum -y install nodejs gcc gcc-c++ glibc-static tmux
            sudo -i -u ec2-user -- mkdir /opt/c9sdk
            sudo -i -u ec2-user -- git clone https://github.com/c9/core.git c9sdk
            sudo -i -u ec2-user -- ./c9sdk/scripts/install-sdk.sh

            # write c9 systemd unit
            cat << 'EOF' > /etc/systemd/system/c9.service
            [Unit]
            Description=Cloud9 IDE
            Requires=network.target

            [Service]
            Type=simple
            User=ec2-user
            EnvironmentFile=/home/ec2-user/bccvldev/.env
            ExecStart=/usr/bin/node /home/ec2-user/c9sdk/server.js \
                --listen 0.0.0.0 \
                --port 8443 \
                --auth "${C9_USER}:${C9_PASS}" \
                -w "${C9_WORKSPACE}" \
                --secure /home/ec2-user/bccvldev/etc/nginx.pem \
                --collab

            Restart=on-failure

            [Install]
            WantedBy=multi-user.target
            EOF

            systemctl daemon-reload
            systemctl enable c9
            systemctl start c9

      group: ungrouped
    type: OS::Heat::SoftwareConfig
  dev_secgroup:
    properties:
      rules:
      - {port_range_max: 80, port_range_min: 80, protocol: tcp, remote_ip_prefix: 132.234.148.0/24}
      - {port_range_max: 443, port_range_min: 443, protocol: tcp, remote_ip_prefix: 132.234.148.0/24}
      - {port_range_max: 8443, port_range_min: 8443, protocol: tcp, remote_ip_prefix: 132.234.148.0/24}
      - {port_range_max: 22, port_range_min: 22, protocol: tcp, remote_ip_prefix: 132.234.148.0/24}
    type: OS::Neutron::SecurityGroup
  dns_entry:
    properties:
      name: {get_param: name}
      records: [{get_attr: [bccvldev_instance, addresses, 'qld', 0, 'addr']}]
      type: A
      zone: nectar.bccvl.org.au.
    type: OS::Designate::RecordSet
