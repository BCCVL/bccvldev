description: BCCVL Dev Env
heat_template_version: '2016-04-08'
outputs:
  instance_ip:
    description: The IP address of the deployed instance
    value: {get_attr: [bccvldev_instance, first_address]}
  accessIPv4:
    description: accessIPv4
    value: {get_attr: [bccvldev_instance, accessIPv4]}
  passwd:
    description: Password to log in
    value: {get_attr: [bccvldev_pw, value]}
parameters:
  name:
    description: 'Instance Name, should be a dns compatible name to support urls like (<name>.nectar.bccvl.org.au)'
    label: Instance Name
    type: string
  image_id:
    description: Image to be used for compute instance
    label: Image ID
    type: string
    default: 2565ee74-60ec-4591-a19b-51e249045739
    constraints:
      - custom_constraint: glance.image
  instance_type:
    description: Type of instance (flavor) to be used
    label: Instance Type
    type: string
    default: m2.medium
    constraints:
      - custom_constraint: nova.flavor
  key_name:
    description: Name of key-pair to be used for compute instance
    label: Key Name
    type: string
    default: BCCVL
    constraints:
      - custom_constraint: nova.keypair
  cloud9_user:
    description: user name used to log in to cloud9
    label: cloud9 user name
    type: string
    default: admin
  bccvlhub_user:
    description: user to log in to bccvl docker registry
    label: bccvl hub user
    type: string
  bccvlhub_pass:
    description: password to log in to bccvl docker registry
    label: bccvl hub password
    type: string
resources:
  bccvldev_instance:
    properties:
      availability_zone: QRIScloud
      flavor: {get_param: instance_type}
      image: {get_param: image_id}
      key_name: {get_param: key_name}
      name: {get_param: name}
      security_groups:
        - {get_resource: dev_secgroup}
      user_data: {get_resource: boot_script}
      user_data_format: SOFTWARE_CONFIG
    type: OS::Nova::Server
  bccvldev_pw:
    properties:
      character_classes: [{"min": 1, "class": "lettersdigits"}]
      length: 12
    type: OS::Heat::RandomString
  boot_script:
    properties:
      config:
        str_replace:
          params:
            __cloud9_pass__: {get_attr: [bccvldev_pw, value]}
            __cloud9_user__: {get_param: cloud9_user}
            __dns__: {list_join: ['.', [{get_param: name}, 'nectar.bccvl.org.au']]}
            __bccvlhub_user__: {get_param: bccvlhub_user}
            __bccvlhub_pass__: {get_param: bccvlhub_pass}
          template: |
            #!/bin/sh

            echo "Running boot script"

            # install required packages

            yum -y update

            yum install -y yum-utils git

            # update kernel
            rpm --import "https://www.elrepo.org/RPM-GPG-KEY-elrepo.org"
            rpm -Uvh "http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm"
            yum --enablerepo=elrepo-kernel install -y kernel-ml
            # set new kernel as default
            grub2-set-default 0

            # install docker
            yum install -y yum-utils device-mapper-persistent-data lvm2
            
            yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

            yum install -y docker-ce

            yum clean all

            systemctl enable docker.service

            systemctl start docker.service

            # allow ec2-user access to docker

            usermod -a -G docker ec2-user

            # install docker-compose

            curl -L "https://github.com/docker/compose/releases/download/1.16.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

            chmod +x /usr/local/bin/docker-compose

            # setup bccvl hub
            docker login -u __bccvlhub_user__ -p __bccvlhub_pass__ hub.bccvl.org.au
            sudo -i -u ec2-user -- docker login -u __bccvlhub_user__ -p __bccvlhub_pass__ hub.bccvl.org.au

            # install cloud9 ide and start it up

            sudo -i -u ec2-user -- git clone https://github.com/BCCVL/bccvldev

            echo "C9_WORKSPACE=/home/ec2-user/bccvldev" > /home/ec2-user/bccvldev/.env
            echo "C9_USER=__cloud9_user__" >> /home/ec2-user/bccvldev/.env
            echo "C9_PASS=__cloud9_pass__" >> /home/ec2-user/bccvldev/.env
            echo "BCCVL_HOSTNAME=__dns__" >> /home/ec2-user/bccvldev/.env

            echo "COMPOSE_FILE=docker-compose.yml:cloud9.yml" >> /home/ec2-user/bccvldev/.env
            echo "COMPOSE_PROJECT_NAME=bccvldev" >> /home/ec2-user/bccvldev/.env

            chown ec2-user:ec2-user /home/ec2-user/bccvldev/.env
            chmod 600 /home/ec2-user/bccvldev/.env

            sudo -i -u ec2-user -- bash -c "cd bccvldev; ./bin/gen_config.sh"

            # TODO: maybe a systemd unit file would be best here?
            echo '#!/bin/sh' > /var/lib/cloud/scripts/per-boot/cloud9.sh
            echo 'sudo -i -u ec2-user -- bash -c "cd bccvldev; /usr/local/bin/docker-compose up -d nginxcloud9 cloud9"' >> /var/lib/cloud/scripts/per-boot/cloud9.sh
            chmod +x /var/lib/cloud/scripts/per-boot/cloud9.sh

            # reboot to activate new kernel
            reboot

      group: ungrouped
    type: OS::Heat::SoftwareConfig
  dev_secgroup:
    properties:
      rules:
      - {port_range_max: 80, port_range_min: 80, protocol: tcp, remote_ip_prefix: 132.234.148.0/24}
      - {port_range_max: 443, port_range_min: 443, protocol: tcp, remote_ip_prefix: 132.234.148.0/24}
      - {port_range_max: 8443, port_range_min: 8443, protocol: tcp, remote_ip_prefix: 132.234.148.0/24}
      - {port_range_max: 22, port_range_min: 22, protocol: tcp, remote_ip_prefix: 132.234.148.0/24}
    type: OS::Neutron::SecurityGroup
#  dns_entry:
#    properties:
#      name: {list_join: ['.', [{get_param: name}, 'nectar.bccvl.org.au.']]}
#      data: {get_attr: [bccvldev_instance, accessIPv4]}
#      type: A
#      domain: nectar.bccvl.org.au.
#    type: OS::Designate::Record
